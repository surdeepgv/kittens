{"version":3,"sources":["serviceWorker.js","Card.js","CardList.js","robots.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","props","name","sc","id","react_default","a","createElement","className","alt","src","height","width","CardList","_ref","robots","cardComponent","map","user","i","src_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","filteredRobots","filter","toLowerCase","includes","src_SearchBox","src_Scroll","src_CardList","Component","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aee56c4e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './Style.css';\r\nimport 'tachyons';\r\nconst Card =(props) =>{\r\n    const{name,id}=props;\r\n  \r\n    \r\n    let sc=\"https://robohash.org/\"+id+\"?set=set4\";\r\n    return(\r\n      <div className=\"tc grow bg-light-yellow dib br3 pa3 ma2 bw2 shadow-5\" >\r\n        <img alt=\"robots\" src={sc} height=\"150px\" width=\"150px\"/>\r\n   <div>\r\n    <h2>{name}</h2>\r\n    </div>\r\n      </div>\r\n      );\r\n  }\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport './Style.css';\r\n\r\nconst CardList=({robots}) =>{\r\n    const cardComponent=robots.map((user,i) => {\r\n        return <Card key={i}\r\n        id={robots[i].id}\r\n         name={robots[i].name}/>\r\n    }\r\n    )\r\n    return(\r\n        <div className=\"align\" >\r\n{cardComponent}\r\n</div>\r\n    );\r\n}\r\nexport default CardList;","export const robots = [\r\n    {\r\n        id:1,\r\n        name: 'Surdeep',\r\n    },\r\n    {\r\n        id:25,\r\n        name: 'Yukesh',\r\n    },\r\n    {\r\n        id:3,\r\n        name: 'Sivaram',\r\n    },\r\n    {\r\n        id:4,\r\n        name: 'Vijay',\r\n    },\r\n    {\r\n        id:5,\r\n        name: 'Raj',\r\n    },\r\n    {\r\n        id:6,\r\n        name: 'Saravana',\r\n    },\r\n    {\r\n        id:7,\r\n        name: 'Sundar',\r\n    },\r\n    {\r\n        id:8,\r\n        name: 'Mani',\r\n    },\r\n    {\r\n        id:9,\r\n        name: 'Sujai',\r\n    },\r\n    {\r\n        id:10,\r\n        name: 'Vignesh',\r\n    },\r\n    {\r\n        id:11,\r\n        name: 'Ravi',\r\n    },\r\n    {\r\n        id:12,\r\n        name: 'Ranjith',\r\n    },\r\n    {\r\n        id:1,\r\n        name: 'Surdeep',\r\n    },\r\n    {\r\n        id:25,\r\n        name: 'Yukesh',\r\n    },\r\n    {\r\n        id:3,\r\n        name: 'Sivaram',\r\n    },\r\n    {\r\n        id:4,\r\n        name: 'Vijay',\r\n    },\r\n    {\r\n        id:5,\r\n        name: 'Raj',\r\n    },\r\n    {\r\n        id:6,\r\n        name: 'Saravana',\r\n    },\r\n    {\r\n        id:7,\r\n        name: 'Sundar',\r\n    },\r\n    {\r\n        id:8,\r\n        name: 'Mani',\r\n    },\r\n    {\r\n        id:9,\r\n        name: 'Sujai',\r\n    },\r\n    {\r\n        id:10,\r\n        name: 'Vignesh',\r\n    },\r\n    {\r\n        id:11,\r\n        name: 'Ravi',\r\n    },\r\n    {\r\n        id:12,\r\n        name: 'Ranjith',\r\n    },\r\n    {\r\n        id:1,\r\n        name: 'Surdeep',\r\n    },\r\n    {\r\n        id:25,\r\n        name: 'Yukesh',\r\n    },\r\n    {\r\n        id:3,\r\n        name: 'Sivaram',\r\n    },\r\n    {\r\n        id:4,\r\n        name: 'Vijay',\r\n    },\r\n    {\r\n        id:5,\r\n        name: 'Raj',\r\n    },\r\n    {\r\n        id:6,\r\n        name: 'Saravana',\r\n    },\r\n    {\r\n        id:7,\r\n        name: 'Sundar',\r\n    },\r\n    {\r\n        id:8,\r\n        name: 'Mani',\r\n    },\r\n    {\r\n        id:9,\r\n        name: 'Sujai',\r\n    },\r\n    {\r\n        id:10,\r\n        name: 'Vignesh',\r\n    },\r\n    {\r\n        id:11,\r\n        name: 'Ravi',\r\n    },\r\n\r\n]","import React from 'react';\r\nimport './Sbox.css';\r\n\r\nconst SearchBox=({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n            className=\"sbox bg-light-yellow\"\r\n            type=\"search\"\r\n            placeholder=\"Search Kittens\"\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style ={{overflowY:'scroll',border:'1px solid orange',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React,{Component} from 'react';\nimport CardList from './CardList';\nimport {robots} from './robots';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport Scroll from './Scroll';\nclass App extends Component  {\n  constructor(){\n    super()\n    this.state= {\n      robots: robots,\n      searchfield:''\n    }\n  }\n  onSearchChange = (event) =>{\n    this.setState({searchfield: event.target.value})\n     }\n    render(){\n    const filteredRobots = this.state.robots.filter(robots =>{\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n  return(\n    <div className=\"tc hi\">\n      <h1 className=\"f1\">Kitten Friends</h1>\n      <SearchBox searchChange={this.onSearchChange} />\n      <Scroll><CardList robots={filteredRobots}/></Scroll>\n      \n    </div>\n  );\n  }\n}\n  export default App;\n\n/*function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Yukesh, Edit <code>src/App.js</code> and save to see the change.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <h1>TEST!!!</h1>\n      </header>\n      \n    </div>\n  );\n}*/\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport './Style.css';\nimport App from './App';\n\nReactDOM.render(\n<App/>\n\n\n\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}